java 容器
1、什么是集合框架
  1.1 集合框架用于存储数据的容器，他定义了对集合操作的体系结构，
    1.1.1 接口
    1.1.2 实现
    1.1.3 算法
2、集合特点
  2.1 对象封装了数据，一系列相同的对象就用集合来管理
  2.2 集合长度确定不变，可以数组，长度变化，就用集合
3、集合和数组的区别
  3.1 是否固定长度
  3.2 是否可以存储基本数据类型
  3.3 是否可以存储不同类型数据
4、使用集合框架的好处
  4.1 容量自增
  4.2 提供便捷的数据操作，提供编程效率，和编程质量
  4.3 通过jdk 自带集合框架，降低学习成本和维护成本
5、常见的集合
  5.1 Collection
    5.1.1 List
      1）ArrayList
      2）Vertor
      3）CopyOnWriteList
    5.1.2 Queue
      1）直接提交队列
      2）有界队列
      3）无界队列
      4）优先级队列
    5.1.3 Set
      1）TreeSet
      2） HashSet
  5.2 Map
    1）HashMap
    2）HashTable
    3）ConcurrentHashMap
    4）ConcurrentSkipListMap

6、哪些结合是线程安全的
  1）vector
  2）statck
  3）HashTable
  4）Enumeration
7、集合快速失败
  1）当多线程操作同一个集合时候，可能产生fast-fail
  2）解决办法 使用同步代码块，或者线程安全的容器
8、如何确保集合不会被更改
  1）使用Collections.unmodifiableCollection()

9、迭代器Iterator 是什么，如何使用，有什么特点
  1）他是一个集合的遍历接口，允许在遍历过程中删除节点，用于代替Enumeration
  2）通过集合调用Iterator方法，然后通过hashNext（）是否有值，通过next（）获取该值
10、如何遍历移除Collection中的元素
  1）通过Iterator.remove()
11、Iterator 和 ListIterator 有什么区别
  1）是否双向
  2）ListIterator 比Iterator多一些才做，比如，比如，获取前面或者后面的索引的位置，添加或者删除一个元素
12、遍历的方式
  1）for：外部通过计数器遍历
  2）foreach：内部采用Iterator
  3）Iterator ：他是一个接口，通过统一的数据遍历，屏蔽不同数据集合特点
  最佳实践方式：看接口时候实现Random Access，如果实现，则读取数据的时间复杂度为O（1）
  推荐做法：1、支持Random-Access for循环 2、使用iterator 或者forreach
13、ArrayList 优缺点
  优点：
    1）自动扩容
    2）以数组为储存接口，查询快捷
  缺点：
    1）操作中间位置的数据，需要做额外的动作
14、数据和List元素之间的转化
  1)数组-->List：Arrays.asList()
  2)List-->数组：List.toArray()

15、ArrayList 和 LinkList 区别
  1）一个是数组，一个是双向链表实现
  2）随机访问效率
  3）增加，删除效率
  4）空间占用
  5）线程安全，他们都不是线程安全

16、ArrayList Verctor 区别
  1）是否线程安全
  2）性能
  3）扩容 ArrayList 1.5倍，vertor 是 两倍

17、ArrayList Vertor LinkList 性能比较
  1）LinkList 使用的是双向链表，插入数据通过尾部节点，添加一个即可
  2）Vertor 存在同步操作，比ArrayList 慢一点

18、多线下如何使用ArrayList
  1）ArrayList 不是线程安全，在并发环境下，请勿使用
  2）一定要使用，通过同步代码块或者Collections.synchronizedList（）来使用
19、ArrayList 为啥加transient修饰
  1）表示不序列化该属性
  2）序列化该属性，通过遍历数组，避免有序列化空值
20、List 和Set 区别
  1）是否有序
  2）是否可以重复
  3）都可以插入null
  4）同时继承Collector
  5）效率，Set 插入删除下来高，List查找效率高

21、HashSet 原理
  1）hashSet 内部是通过HashMap 实现的，他讲数据存放在Key中，Value存放是同一个元素

22、equals 和hashCode 比较
  1）对象相等，hashCode一定相等
  2）对象相等，equals 一定为true
  3）hashcode 被覆盖，equals 一需要被覆盖
  4）hashcode 相等，对象不一定相等
23、==与equal 区别
  1）equls 是 object的方法，如果没有的覆盖equal，默认调用==
  2）==如果是对象比较，是比较两个对象的引用是否是同一个对象（Interger 有缓存）
  3）equal 一般是用于值的比较

24、HashMap 和 HashSet区别
  1）Map 接口 和Collector 接口
  2）put方法 和add 方法
  3）key value 一个 Key

25、BlockingQueue 是什么
  25.1 队列的操作
    添加：
      1）add 抛出异常      1）remove 抛出异常
      2）put 阻塞          2）take 阻塞
      3）offer 满了false   3）poll 放回null


    移除：




    查看：
      1）peek Object
      2）
