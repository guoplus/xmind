mysql 面试：https://blog.csdn.net/ThinkWon/article/details/104778621

java平台理解
  java平台上层是应用层：比如说spring，elk等
  语言特性：面向对象，labbuda，反射，泛行，多线程，可移植
  java类库：1）核心，2)安全，3）管理，4）第三方
  java工具包：1）编译javac，2）调试工具，jmap，jstatck，3）辅助工具，jconsole
  jvm：
    垃圾收集算法：
      1）标记复制：monjor-gc
      2）标记整理：stop-word
      3）标记清除：full-gc
      4）分代算法
    垃圾收集器：
      年轻代：标记复制，存活对象少，
        1）serial
        2）parNew
        3）parlaller-scavergn
      老年代：标记清除，存活对象多
        1）cms
          1）初始标记（stop）
          2）并发标记
            三色标记法
              灰色：至少有一个引用需要扫描
              黑色：安全
              白色：下次需要扫描
            1）浮动垃圾
            2）对象消失，通过快照，解决
          3）重新标记（stop）
          4）并发清除
        1）serial-old
        2）parlaller-old
      两者：G1

    classLoader：
      加载：
        通过全额限定获取到二进制文件
        将资源转化为方法区的结构化数据
        在内存中生成一个class对象，标标识改结构化数据
      验证：
        字节码
        引用
        符号
        元数据
      准备：
        准备内存【在编译的时候，回填static final 数据】
      解析：
        将符号替换直接引用
      初始化：
        执行cinit，初始化属性
          主动：
            1）putstatic
            2）getstatic
            3）invoke
            4）new
          被动：不会初始化
            1）第三方，在子类中调用父类
            2）数据数组
            3）调用类变量（被static 和final 修饰）



hashMap理解
  使用场景：key-value 存取类型
  数据结构：数据+链表/红黑树
  方法：
    索引计算：
      1）key的hashcode 高16位和低16位异或，使其分布更加均匀，
      2）数据长度^hashcode，高效
    put方法：
      1）是和否初始化，没有初始化
      2）判断桶值是否为空，为空直接放入
      3）桶不为空，判断是否为红黑树，不是为链表
        1）遍历链表，如果存在相同的value，替换，如果不存在，放到末尾
        2）判断是否树化
      4）为红黑树，加入到红黑树
      5）判断是否扩容

    扩容方法：
      1）初始化扩容*2
      2）遍历链表，重新计算hash值，放到两个临时遍历中，两个变量在数组相差的为位置为老的数据长度
      3）将临时变量放入新的数组中
    问题：1.7采用的尾部连接法，在多线程并发扩容的情况下，存在着链表换，造成死循环
    1.8解决的这个问题，但是两者任然有数据丢失的情况，而且hashMap 并不保证线程安全。如果需要，可以使用线程安全的HashMap


redis-数据结构
  数据类型
    String List hash Sort-Set Set
  数据结构
    动态字符串 双向链表 压缩列表 hash表 跳表 整数数组


sysnchronized 和lock 区别
  1）一个是java关键字，一个是接口
  2）是否可以自动释放锁（发生异常，sysnchronized可以主动释放）
  3）是否可中断
  4）是否公平



myISAM 和InnoDb 区别
  1）是否支持全文索引
  2）是否支持事务

  3）是支持外键
  4）锁的细腻程度

  5）是否支持hash索引
  6）记录存储顺序
  7）文件格式（数据和索引是否分别存储）

MyIsAm 索引和InnoDB 索引区别
  1）innode 聚簇索引，MyIsAm 非聚簇索引

ImnoDB 四大特性
  1）二次提交
  2）预读
  3）插入缓存
  4）自适应hash


索引优化：
  1）自适应hash
  2）覆盖索引
  3）最左匹配s

索引类型
  1）主键索引
  2）非主键索引
    1）唯一索引
    2）普通索引
    3）全文索引

索引的数据结构
  1）B+
  2）hash
  3）数组
  4）b

创建索引原则
  1）查询频繁
  2）最左匹配

  3）更新频繁不适合
  4）区分度太低（男女）

  5）有外键
  6）查询中涉及很少列
  7）大数据



